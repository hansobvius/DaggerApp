// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.android.daggerapp.components.modules;

import com.android.daggerapp.model.ProjectModel;
import com.android.daggerapp.repository.ProjectRepository;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import java.util.List;
import javax.inject.Provider;

public final class ProjectModule_ProvidesProjectRepositoryFactory
    implements Factory<ProjectRepository> {
  private final ProjectModule module;

  private final Provider<List<ProjectModel>> projectModelListProvider;

  public ProjectModule_ProvidesProjectRepositoryFactory(
      ProjectModule module, Provider<List<ProjectModel>> projectModelListProvider) {
    this.module = module;
    this.projectModelListProvider = projectModelListProvider;
  }

  @Override
  public ProjectRepository get() {
    return Preconditions.checkNotNull(
        module.providesProjectRepository(projectModelListProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<ProjectRepository> create(
      ProjectModule module, Provider<List<ProjectModel>> projectModelListProvider) {
    return new ProjectModule_ProvidesProjectRepositoryFactory(module, projectModelListProvider);
  }

  public static ProjectRepository proxyProvidesProjectRepository(
      ProjectModule instance, List<ProjectModel> projectModelList) {
    return instance.providesProjectRepository(projectModelList);
  }
}
