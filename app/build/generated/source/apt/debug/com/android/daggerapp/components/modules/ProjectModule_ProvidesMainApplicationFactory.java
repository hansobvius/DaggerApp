// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.android.daggerapp.components.modules;

import com.android.daggerapp.components.MainApplication;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class ProjectModule_ProvidesMainApplicationFactory
    implements Factory<MainApplication> {
  private final ProjectModule module;

  public ProjectModule_ProvidesMainApplicationFactory(ProjectModule module) {
    this.module = module;
  }

  @Override
  public MainApplication get() {
    return Preconditions.checkNotNull(
        module.providesMainApplication(),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<MainApplication> create(ProjectModule module) {
    return new ProjectModule_ProvidesMainApplicationFactory(module);
  }

  public static MainApplication proxyProvidesMainApplication(ProjectModule instance) {
    return instance.providesMainApplication();
  }
}
